---
variables:
  SAST_EXCLUDED_PATHS: public,vendor,node_modules
  SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
  GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task

stages:
  - test
  - build
  - deploy

test:lighthouse:
  stage: test
  image: cypress/browsers:node12.18.0-chrome83-ff77
  before_script:
    - yarn install
    - yarn run build
    - npm install -g @lhci/cli@0.4.x
  script:
    - lhci autorun --collect.settings.chromeFlags="--no-sandbox" || echo "LHCI failed!" | lighthouse-report.log
  artifacts:
    paths:
      - lighthouse-report.txt
  needs: []

test:php:
  stage: test
  image: alpine:edge
  before_script:
    - apk -U add composer php7 php7-common php7-tokenizer musl-dev make php7-dom php7-xml php7-simplexml php7-xmlwriter php7-pear php7-dev gcc
    - pecl install xdebug
    - echo "zend_extension=/usr/lib/php7/modules/xdebug.so" >> /etc/php7/php.ini
    - echo "memory_limit=-1" >> /etc/php7/php.ini
    - php -m
    - composer install
  script:
    - composer run test
  after_script:
    - apk -U add git curl bash findutils
    - bash -c '/bin/bash <(curl -s https://codecov.io/bash)'
  needs: []

test:sonarcloud:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  needs: []

build:js:
  stage: build
  image: node:12.18.3
  before_script:
    - yarn install
  script:
    - yarn run build
  artifacts:
    paths:
      - dist/web
  needs: []

build:php:
  stage: build
  image: composer:1.10.13
  before_script:
    - php -v
  script:
    - composer install --no-dev --optimize-autoloader --no-progress
  artifacts:
    paths:
      - src/api
      - vendor/
  needs: ['test:php']

deploy:
  stage: deploy
  dependencies:
    - build:js
    - build:php
  script:
    - ls -a
  only:
    - ci-deploy
  needs: ['test:php', 'build:js', 'build:php']

pages:
  stage: deploy
  script: echo "Done"
  artifacts:
    paths:
      - public
  only:
    - main
  needs: []
